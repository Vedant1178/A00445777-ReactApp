{"version":3,"sources":["components/Navbar.js","pages/About.js","pages/Town.js","App.js","reportWebVitals.js","index.js"],"names":["withRouter","className","to","exact","About","Town","props","state","temp","unit","statusIconFileName","changeWeatherType","bind","getWeatherData","currentTemp","this","setState","Math","round","url","fetch","then","result","json","data","currentTotal","src","alt","onClick","React","Component","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAuBeA,mBArBf,WACI,OACI,sBAAKC,UAAU,SAAf,UACI,cAAC,IAAD,CACIA,UAAU,cACVC,GAAG,IACHC,OAAK,EAHT,sBAOA,cAAC,IAAD,CACIF,UAAU,cACVC,GAAG,QACHC,OAAK,EAHT,2BCGGC,MAdf,WACI,OACI,sBAAKH,UAAU,WAAf,UACI,oBAAIA,UAAU,gBAAd,kCACA,qBAAKA,UAAU,aAAf,SACG,yGAEH,qBAAKA,UAAU,aAAf,SACG,2H,wCC4EAI,G,wDAjFX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,EACNC,KAAM,IACNC,mBAAoB,QAExB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBARP,E,qDAYnB,WACI,IAAIE,EACoB,MAApBC,KAAKR,MAAME,MACXK,EAAe,IAAAC,KAAKR,MAAMC,KAAkB,GAC5CO,KAAKC,SAAS,CAAEP,KAAM,QAEtBK,GAAeC,KAAKR,MAAMC,KAAO,KAAO,EAAI,GAC5CO,KAAKC,SAAS,CAAEP,KAAM,OAE1BK,EAAeG,KAAKC,MAAMJ,GAC1BC,KAAKC,SAAS,CAAER,KAAMM,M,4BAG1B,WAAkB,IAAD,OAGPK,EAAG,4DADI,UACJ,kBAFO,mCAEP,iBAETC,MAAMD,GACDE,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAACG,GACH,IAAMV,EAAcU,EAAI,KAAJ,KACpB,EAAKR,SAAS,CAAER,KAAMM,IAClBA,GAAe,GACf,EAAKE,SAAS,CAAEN,mBAAoB,SAC7BI,EAAc,IAAMA,EAAc,GACzC,EAAKE,SAAS,CAAEN,mBAAoB,SAGpC,EAAKM,SAAS,CAAEN,mBAAoB,e,+BAKpD,WACIK,KAAKF,mB,oBAGT,WAEI,OADAE,KAAKU,cAAgB,EAEjB,sBAAKxB,UAAU,WAAf,UACI,qBAAKyB,IAAI,aAAaC,IAAI,OAAO1B,UAAU,aAC3C,oBAAIA,UAAU,gBAAd,2CACA,qBAAKA,UAAU,eAEf,qBAAKA,UAAU,eAAf,SACI,sBAAKA,UAAU,eAAf,UACI,qBAAKyB,IAAK,KAAOX,KAAKR,MAAMG,mBAAqB,OAAQiB,IAAI,iBAAiB1B,UAAU,iBACxF,sBACIA,UAAU,eADd,UAGKc,KAAKR,MAAMC,KAHhB,IAGuBO,KAAKR,MAAME,QAElC,wBACIR,UAAU,cACV2B,QAASb,KAAKJ,kBAFlB,qC,GAnELkB,IAAMC,YCiBVC,MAhBf,WACI,OACI,eAAC,IAAD,WACI,cAAC,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAO5B,OAAK,EAAC6B,KAAK,IAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,QAAZ,SACI,cAAC,EAAD,aCDLC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAO1BZ,M","file":"static/js/main.7d10a18a.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nfunction Navbar() {\n    return (\n        <div className=\"navbar\">\n            <NavLink\n                className='navbar-item'\n                to=\"/\"\n                exact\n            >\n                About Me\n            </NavLink>\n            <NavLink\n                className='navbar-item'\n                to=\"/town\"\n                exact\n            >\n                My Town\n            </NavLink>\n        </div>\n    );\n}\n\nexport default withRouter(Navbar);","\nfunction About() {\n    return (\n        <div className='about-me'>\n            <h1 className='about-heading'>Hi, I'm Vedant Patel</h1>\n            <div className='about-text'>\n               <h3> I have rich experience in Java and Php with it's diverse frameworks.</h3>\n            </div>\n            <div className='about-text'>\n               <h3>Looking forward to my future I'm enthusiastic to become a full stack web developer.</h3>\n            </div>\n        </div>\n    );\n}\n\nexport default About;","import React from 'react';\nimport './town.css'\n\nclass Town extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            temp: 0,\n            unit: 'C',\n            statusIconFileName: 'cold'\n        }\n        this.changeWeatherType = this.changeWeatherType.bind(this);\n        this.getWeatherData = this.getWeatherData.bind(this);\n\n    }\n\n    changeWeatherType() {\n        let currentTemp;\n        if (this.state.unit === 'C') {\n            currentTemp = (this.state.temp * (9 / 5)) + 32;\n            this.setState({ unit: 'F' });\n        } else {\n            currentTemp = (this.state.temp - 32) * (5 / 9);\n            this.setState({ unit: 'C' });\n        }\n        currentTemp =  Math.round(currentTemp);\n        this.setState({ temp: currentTemp });\n    }\n\n    getWeatherData() {\n        const api_key = '39e72aa7c206ec8aaca0c03ba76989b7';\n        const city = 'Halifax';\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${api_key}&units=metric`;\n\n        fetch(url)\n            .then(result => result.json())\n            .then((data) => {\n                const currentTemp = data['main']['temp'];\n                this.setState({ temp: currentTemp });\n                if (currentTemp <= 10) {\n                    this.setState({ statusIconFileName: 'cold' });\n                } else if (currentTemp > 10 && currentTemp < 20) {\n                    this.setState({ statusIconFileName: 'mild' });\n\n                } else {\n                    this.setState({ statusIconFileName: 'sunny' });\n\n                }\n            })\n    }\n    componentDidMount() {\n        this.getWeatherData();\n    }\n\n    render() {\n        this.currentTotal += 1;\n        return (\n            <div className='about-me'>\n                <img src='./town.jpg' alt='town' className='town-img' />\n                <h1 className='about-heading'>I live in Halifax, NS, Canada</h1>\n                <div className='about-text'>\n            </div>\n                <div className='weather-info'>\n                    <div className='weather-data'>\n                        <img src={'./' + this.state.statusIconFileName + '.png'} alt='weather status' className='weather-icon' />\n                        <div\n                            className='weather-data'\n                        >\n                            {this.state.temp} {this.state.unit}\n                        </div>\n                        <button\n                            className='change-type'\n                            onClick={this.changeWeatherType}\n                        >\n                            Change Unit\n                    </button>\n                    </div>\n\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Town;","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from './components/Navbar';\nimport About from './pages/About';\nimport Town from './pages/Town';\nfunction App() {\n    return (\n        <BrowserRouter>\n            <Navbar />\n            <Switch>\n                <Route exact path=\"/\">\n                    <About />\n                </Route>\n                <Route path=\"/town\">\n                    <Town />\n                </Route>\n            </Switch>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}